
api-error {
  bad-request = "Invalid request {0}"
  bad-format = "The data transmitted does not respect the Json format"
  bad-format-form-data = "Invalid form data request"
  forbidden = "You are not allowed to access this resource"
  entity-too-large = "Please select a document of less than {0}"
  not-found = "The resource was not found"
  route-not-found = "The route ''{0} {1}'' was not found on the server"
  validation-errors = "There are errors in the data transmitted"
  internal-server-error = "Internal error during query handling"
}

validation {

  parsing {
    cannot-parse = "The provided value cannot be parsed"
  }

  user {
    uuid-invalid = "The provided UUID ''{0}'' is not a valid UUID"
    uuid-alread-exists = "The provided UUID ''{0}'' should be unique"
    email-already-exists = "The provided email ''{0}'' is already used by another user"
    login-already-exists = "The provided login ''{0}'' is already used by another user"
    invalid-login-or-password = "The provided password and/or login is not valid"
  }

  sharing {
    invalid-key = "The provided secret key is not valid"
    forbidden = "You are not allowed to edit this sharing"
    expired = "This sharing is expired"
  }

  range {
    range-outside-end = "The end of the provided range is outside of the file"
    range-outside-start = "The start of the provided range is outside of the file"
    range-negative = "The provided range is negative"
  }

  metadata {
    unknown-type = "Unknown type of metadata to parse"
  }

  fs-node {
    unknown-type = "The type ''{0}'' is not a known type of file system element"
    not-directory = "The element at ''{0}'' is not a directory"
    not-file = "The element at ''{0}'' is not a file"
    root-delete = "The root of the file system cannot be deleted"
    root-move = "The root of the file system cannot be moved"
    inside-move = "The directory ''{0}'' cannot be moved inside itself"
    creator-diff = "The user creating the element should be the same as the owner of the element"
    directory-already-exists = "A directory with the same path ''{0}'' already exists"
    file-already-exists = "A file with the same path ''{0}'' already exists"
    node-already-exists = "An element with the same path ''{0}'' already exists"
    no-parent = "The parent ''{0}'' of the created element does not exist"
    non-empty = "The directory ''{0}'' is not empty. Only empty directories can be deleted"
    unknown-cipher = "The cipher ''{0}'' is not a valid cipher name"
    unknown-compression = "The compresson ''{0}'' is not a valid compresson name"
    no-thumbnail = "The file ''{0}'' does not have a thumbnail"
  }

  fs-operation {
    unknown-type = "The type ''{0}'' is not a known type of file system operation"
  }

}

ui {
  appName = "Cumulus"
  baseline = "Personal cloud done right!"
  empty = "Empty"
  delete = "Delete"
  uploader = "Uploader"
  upload = "Upload"
  cancel = "Cancel"
  create = "Create"
  download= "Download"
  close= "Close"
  secure = "Secure"
  compressionGzip = "Compression gzip"
  compressionDeflate = "Compression deflate"
  done = "Done"
  move = "Move"
  rename= "Rename"
  share = "Share"
  search = "Search"
  informations = "Informations"

  auth {
    logout = "Logout"
    signup = "Signup"
    email = "Email"
    login = "Login"
    loginAction = "Login"
    password = "Password"
  }

  newFolder = "New Folder"
  createNewFolder = "Create new folder"
  folderName = "Folder Name"

  myserver = "My Server"

  metadata {
    size = "Size"
    hash = "Hash"
    compression = "Compression"
    cipher = "Cipher"
    creation = "Creation"
    modification = "Modification"
  }
}
